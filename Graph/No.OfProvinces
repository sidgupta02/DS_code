private:
    void dfs(int node,vector<int>adj[],int vis[]){
        vis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it]){
                dfs(it,adj,vis);
            }
        }
    }
  public:
    int numProvinces(vector<vector<int>> adj, int n) {
        vector<int> ad[n];
        
        //adjacency matrix to adjacency list
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(adj[i][j]==1){
                    ad[i].push_back(j);
                    ad[j].push_back(i);
                }
            }
        }
        
        int vis[n]={0};
        int cnt=0;
        
        for(int i=0;i<n;i++){
            if(!vis[i]){
                cnt++;
                dfs(i,ad,vis);
            }
        }
        return cnt;
    }


//space o(n)+o(n) == o(n)
//time o(n2)
