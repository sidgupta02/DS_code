//*******************************************************************************

//declaring head as a global variable
#include <stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node* next;
};
struct node* head;

void insert(int x){
    struct node* temp=(struct node*)malloc(sizeof(struct node));
    temp->data=x;
    temp->next=head;
    head=temp; 
}
void print(){
    struct node* temp=head;
    printf("list is : ");
    while(temp != NULL){
        printf("%d ",temp->data);
        temp=temp->next;
    }
    printf("\n");
}
int main()
{
    head=NULL; //empty list
    printf("how many no.: ");
    int x,n;
    scanf("%d ",&n);
    for(int i=0;i<n;i++){
        printf("enter the no.: \n");
        scanf("%d",&x);
        insert(x);
        print();
    }
    return 0;
}

//*******************************************************************************

// or another solution is :

declaring head as a local variable

/******************************************************************************

Welcome to GDB Online.
  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS
  Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node* next;
};
//struct node* head;

struct node* insert(struct node* head,int x){
    struct node* temp=(struct node*)malloc(sizeof(struct node));
    temp->data=x;
    temp->next=head;
    head=temp; 
    return head;
}
void print(struct node* head){
    printf("list is : ");
    while(head != NULL){
        printf("%d ",head->data);
        head=head->next;
    }
    printf("\n");
}
int main()
{
    struct node* head=NULL; //empty list
    printf("how many no.: ");
    int x,n;
    scanf("%d ",&n);
    for(int i=0;i<n;i++){
        printf("enter the no.: \n");
        scanf("%d",&x);
        head= insert(head,x);
        print(head);
    }
    return 0;
}

